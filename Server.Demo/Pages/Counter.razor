@page "/counter"

@using Hearty.Server.Mocks
@using Hearty.Work
@using Microsoft.Extensions.Logging
@inject MockWorkerHosts _mockWorkerHosts
@inject ILogger<MockPricingWorker> _workerLogger

@code {
    [CascadingParameter]
    public BlazorConnectionInfo ConnectionInfo { get; set; } = null!;
}

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<p>Server host: @ConnectionInfo.ServerHost</p>
<p>Server port: @ConnectionInfo.ServerPort</p>
<p>User agent: @ConnectionInfo.UserAgent</p>
<p>IP address: @ConnectionInfo.IpAddress</p>

<p>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
</p>

<p>
<button class="btn btn-primary" @onclick="MakeFakeRemoteWorkersAsync">Make fake remote workers</button>
</p>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    private Task MakeFakeRemoteWorkersAsync()
    {
        return _mockWorkerHosts.CreateFakeWorkersAsync(
            host: ConnectionInfo.ServerHost,
            port: ConnectionInfo.ServerPort,
            secure: ConnectionInfo.IsSecure,
            path: ConnectionInfo.PathBase + WorkerHost.WebSocketsDefaultPath,
            count: 10,
            concurrency: 10,
            namePrefix: "remote-worker-",
            factory: (name, concurrency) 
                => new MockPricingWorker(_workerLogger, name));
    }
}
