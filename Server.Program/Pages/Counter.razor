@page "/counter"

@using JobBank.Server.Program.Data
@inject WebSocketTest _webSocketTest

@code {
    [CascadingParameter]
    public BlazorConnectionInfo ConnectionInfo { get; set; } = null!;
}

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<p>Server host: @ConnectionInfo.ServerHost</p>
<p>Server port: @ConnectionInfo.ServerPort</p>
<p>User agent: @ConnectionInfo.UserAgent</p>
<p>IP address: @ConnectionInfo.IpAddress</p>

<p>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
</p>

<p>
<button class="btn btn-primary" @onclick="DoWebSocketTestAsync">WebSocket test</button>
</p>

<p>
<button class="btn btn-primary" @onclick="MakeFakeRemoteWorkersAsync">Make fake remote workers</button>
</p>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    private Task DoWebSocketTestAsync()
        => _webSocketTest.ExerciseClientSocketAsync();

    private Task MakeFakeRemoteWorkersAsync()
        => _webSocketTest.CreateFakeRemoteWorkerHostsAsync(ConnectionInfo.ServerHost,
                                                           ConnectionInfo.ServerPort,
                                                           ConnectionInfo.IsSecure);
}
