@page "/ui/counter"

@using Hearty.Server.Mocks
@using Hearty.Server.WebUi
@using Hearty.Work
@using Microsoft.Extensions.Logging
@inject MockWorkerHosts _mockWorkerHosts
@inject ILogger<MockPricingWorker> _workerLogger
@inject DisplaySpecialization _displaySpecialization;

@code {
    [CascadingParameter]
    public BlazorConnectionInfo ConnectionInfo { get; set; } = null!;
}

<h1>Counter</h1>
<div class="content">

<p>Server host: @ConnectionInfo.ServerHost</p>
<p>Server port: @ConnectionInfo.ServerPort</p>
<p>User agent: @ConnectionInfo.UserAgent</p>
<p>IP address: @ConnectionInfo.IpAddress</p>
<p>WebSocket URL: @_displaySpecialization.WorkersWebSocketsUrl</p>

<p>
<button class="btn btn-primary" @onclick="MakeFakeRemoteWorkersAsync">Make fake remote workers</button>
</p>
</div>

@code {
    private Task MakeFakeRemoteWorkersAsync()
    {
        var url = _displaySpecialization.WorkersWebSocketsUrl
                    ?? throw new InvalidOperationException("WebSockets URL is not configured. ");

        return _mockWorkerHosts.CreateFakeWorkersAsync(
            url,
            count: 10,
            concurrency: 10,
            namePrefix: "remote-worker-",
            factory: (name, concurrency) 
                => new MockPricingWorker(_workerLogger, name));
    }
}
